---
- name: Create databases and users in RDS
  hosts: bastion
  gather_facts: false
  vars_files:
    - group_vars/rds.yml
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Install PostgreSQL client and Python library
      become: true
      apt:
        name:
          - postgresql-client
          - python3-psycopg2
        state: present
        update_cache: yes

    - name: Create databases
      community.postgresql.postgresql_db:
        name: "{{ item.name }}"
        state: present
        login_host: "{{ rds_host }}"
        login_port: "{{ rds_port }}"
        login_user: "{{ rds_master_user }}"
        login_password: "{{ rds_master_password }}"
      loop: "{{ databases }}"

    - name: Create users
      community.postgresql.postgresql_user:
        name: "{{ item.user }}"
        password: "{{ item.password }}"
        priv: "ALL"
        db: "{{ item.name }}"
        state: present
        login_host: "{{ rds_host }}"
        login_port: "{{ rds_port }}"
        login_user: "{{ rds_master_user }}"
        login_password: "{{ rds_master_password }}"
      loop: "{{ databases }}"

    - name: Grant USAGE and CREATE privileges on public schema
      community.postgresql.postgresql_query:
        query: 'GRANT USAGE, CREATE ON SCHEMA public TO "{{ item.user }}" ;'
        login_host: "{{ rds_host }}"
        login_port: "{{ rds_port }}"
        login_user: "{{ rds_master_user }}"
        login_password: "{{ rds_master_password }}"
        db: "{{ item.name }}"
      loop: "{{ databases }}"


    - name: Grant privileges on all tables and sequences
      community.postgresql.postgresql_query:
        query: |
          GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO "{{ item.user }}";
          GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO "{{ item.user }}";
        login_host: "{{ rds_host }}"
        login_port: "{{ rds_port }}"
        login_user: "{{ rds_master_user }}"
        login_password: "{{ rds_master_password }}"
        db: "{{ item.name }}"
      loop: "{{ databases }}"


    - name: Output connection URLs
      debug:
        msg: "postgres://{{ item.user }}:{{ item.password }}@{{ rds_host }}:{{ rds_port }}/{{ item.name }}"
      loop: "{{ databases }}"
